# Kubernetes Deployment Configurations for MCP Services with Istio
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-organization
  namespace: mcp-system
  labels:
    app: mcp-organization
    version: stable
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mcp-organization
      version: stable
  template:
    metadata:
      labels:
        app: mcp-organization
        version: stable
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPULimit: "200m"
        sidecar.istio.io/proxyMemoryLimit: "256Mi"
    spec:
      serviceAccountName: mcp-organization
      containers:
      - name: mcp-organization
        image: mcp-organization:latest
        ports:
        - containerPort: 5005
          name: http
        env:
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: organization_db
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://opentelemetry-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "mcp-organization"
        - name: OTEL_TRACES_EXPORTER
          value: "otlp"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 5005
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 5005
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-organization
  namespace: mcp-system
  labels:
    app: mcp-organization
spec:
  ports:
  - port: 5005
    targetPort: 5005
    name: http
  selector:
    app: mcp-organization
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-organization
  namespace: mcp-system
  labels:
    app: mcp-organization
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-llm
  namespace: mcp-system
  labels:
    app: mcp-llm
    version: stable
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-llm
      version: stable
  template:
    metadata:
      labels:
        app: mcp-llm
        version: stable
        optimization: standard
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
    spec:
      serviceAccountName: mcp-llm
      containers:
      - name: mcp-llm
        image: mcp-llm:latest
        ports:
        - containerPort: 5002
          name: http
        env:
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: CLAUDE_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-secrets
              key: claude-api-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-secrets
              key: openai-api-key
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-secrets
              key: gemini-api-key
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://opentelemetry-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "mcp-llm"
        - name: OTEL_TRACES_EXPORTER
          value: "otlp"
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 5002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 5002
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-llm
  namespace: mcp-system
  labels:
    app: mcp-llm
spec:
  ports:
  - port: 5002
    targetPort: 5002
    name: http
  selector:
    app: mcp-llm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-llm
  namespace: mcp-system
  labels:
    app: mcp-llm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-controller
  namespace: mcp-system
  labels:
    app: mcp-controller
    version: stable
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mcp-controller
      version: stable
  template:
    metadata:
      labels:
        app: mcp-controller
        version: stable
        tier: standard
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
    spec:
      serviceAccountName: mcp-controller
      containers:
      - name: mcp-controller
        image: mcp-controller:latest
        ports:
        - containerPort: 5013
          name: http
        env:
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: debate_db
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: ORGANIZATION_SERVICE_URL
          value: "http://mcp-organization:5005"
        - name: LLM_SERVICE_URL
          value: "http://mcp-llm:5002"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://opentelemetry-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "mcp-controller"
        - name: OTEL_TRACES_EXPORTER
          value: "otlp"
        resources:
          requests:
            cpu: 250m
            memory: 384Mi
          limits:
            cpu: 750m
            memory: 768Mi
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 5013
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 5013
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-controller
  namespace: mcp-system
  labels:
    app: mcp-controller
spec:
  ports:
  - port: 5013
    targetPort: 5013
    name: http
  selector:
    app: mcp-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-controller
  namespace: mcp-system
  labels:
    app: mcp-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-rag
  namespace: mcp-system
  labels:
    app: mcp-rag
    version: stable
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-rag
      version: stable
  template:
    metadata:
      labels:
        app: mcp-rag
        version: stable
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
    spec:
      serviceAccountName: mcp-rag
      containers:
      - name: mcp-rag
        image: mcp-rag:latest
        ports:
        - containerPort: 5004
          name: http
        env:
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: rag_db
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: QDRANT_URL
          value: "http://qdrant:6333"
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://opentelemetry-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "mcp-rag"
        - name: OTEL_TRACES_EXPORTER
          value: "otlp"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 600m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 5004
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 5004
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-rag
  namespace: mcp-system
  labels:
    app: mcp-rag
spec:
  ports:
  - port: 5004
    targetPort: 5004
    name: http
  selector:
    app: mcp-rag
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-rag
  namespace: mcp-system
  labels:
    app: mcp-rag
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-template
  namespace: mcp-system
  labels:
    app: mcp-template
    version: stable
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-template
      version: stable
  template:
    metadata:
      labels:
        app: mcp-template
        version: stable
        deployment: blue
      annotations:
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
    spec:
      serviceAccountName: mcp-template
      containers:
      - name: mcp-template
        image: mcp-template:latest
        ports:
        - containerPort: 5006
          name: http
        env:
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: template_db
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://opentelemetry-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "mcp-template"
        - name: OTEL_TRACES_EXPORTER
          value: "otlp"
        resources:
          requests:
            cpu: 150m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 5006
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 5006
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-template
  namespace: mcp-system
  labels:
    app: mcp-template
spec:
  ports:
  - port: 5006
    targetPort: 5006
    name: http
  selector:
    app: mcp-template
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-template
  namespace: mcp-system
  labels:
    app: mcp-template
---
# Horizontal Pod Autoscaler configurations
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-organization-hpa
  namespace: mcp-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-organization
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: istio_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-llm-hpa
  namespace: mcp-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-llm
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-controller-hpa
  namespace: mcp-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-controller
  minReplicas: 2
  maxReplicas: 12
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Pod Disruption Budgets
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mcp-organization-pdb
  namespace: mcp-system
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mcp-organization
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mcp-llm-pdb
  namespace: mcp-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mcp-llm
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mcp-controller-pdb
  namespace: mcp-system
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mcp-controller