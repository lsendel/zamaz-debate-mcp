apiVersion: v1
kind: Secret
metadata:
  name: sidecar-secret
  namespace: zamaz-mcp
  labels:
    app: mcp-sidecar
    component: security-gateway
type: Opaque
data:
  # Base64 encoded JWT secret (generate with: openssl rand -base64 32 | base64)
  jwt-secret: bWNwLXNpZGVjYXItcHJvZHVjdGlvbi1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u
  # Base64 encoded API keys for external services
  threat-intelligence-api-key: ""
  # Base64 encoded certificates for mutual TLS
  client-cert: ""
  client-key: ""
  ca-cert: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: zamaz-mcp
  labels:
    app: redis
    component: cache
type: Opaque
data:
  # Base64 encoded Redis password
  password: cmVkaXMtcGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sidecar-config
  namespace: zamaz-mcp
  labels:
    app: mcp-sidecar
    component: security-gateway
data:
  application.yml: |
    server:
      port: 8080
      shutdown: graceful
    
    spring:
      application:
        name: mcp-sidecar
      profiles:
        active: production
      redis:
        host: redis-service
        port: 6379
        password: ${REDIS_PASSWORD}
        timeout: 2000ms
        jedis:
          pool:
            max-active: 8
            max-idle: 8
            min-idle: 0
            max-wait: 1000ms
    
    jwt:
      secret: ${JWT_SECRET}
      issuer: ${JWT_ISSUER}
      expiration: ${JWT_EXPIRATION}
      refresh-expiration: ${JWT_REFRESH_EXPIRATION}
    
    resilience4j:
      circuitbreaker:
        configs:
          default:
            sliding-window-size: 10
            minimum-number-of-calls: 5
            failure-rate-threshold: 50
            wait-duration-in-open-state: 30s
            permitted-number-of-calls-in-half-open-state: 3
            automatic-transition-from-open-to-half-open-enabled: true
        instances:
          organization-service:
            base-config: default
          llm-service:
            base-config: default
            failure-rate-threshold: 60
            wait-duration-in-open-state: 60s
          debate-controller:
            base-config: default
          rag-service:
            base-config: default
    
    logging:
      level:
        com.zamaz.mcp.sidecar: ${LOG_LEVEL}
        org.springframework.security: WARN
        org.springframework.cloud.gateway: WARN
        io.github.resilience4j: WARN
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: when-authorized
        metrics:
          enabled: true
      metrics:
        export:
          prometheus:
            enabled: true
        tags:
          application: ${spring.application.name}
          environment: production
    
    app:
      name: mcp-sidecar
      version: 1.0.0
      cors:
        allowed-origins: ${CORS_ALLOWED_ORIGINS}
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600
      
      ai:
        load-balancer:
          strategy: weighted-round-robin
          health-check:
            interval: 30s
            timeout: 5s
            unhealthy-threshold: 3
            healthy-threshold: 2
      
      metrics:
        enabled: true
        prefix: mcp.sidecar
        collection:
          interval: 30s
        cleanup:
          interval: 1h
        retention:
          period: 7d
        export:
          enabled: true
          interval: 5m
      
      cache:
        enabled: true
        default-ttl: 300
        ai-response-ttl: 1800
        auth-token-ttl: 3600
        user-session-ttl: 86400
        organization-data-ttl: 3600
      
      tracing:
        enabled: true
        sampling-rate: 0.1
        service-name: mcp-sidecar
      
      security:
        scanning:
          enabled: true
          strict-mode: false
          max-payload-size: 1048576
        threat-intelligence:
          enabled: false
          api-url: ""
          update-interval: 6h
        cleanup:
          interval: 1h
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-sidecar
  namespace: zamaz-mcp
  labels:
    app: mcp-sidecar
    component: security-gateway
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mcp-sidecar-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mcp-sidecar-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mcp-sidecar-role
subjects:
- kind: ServiceAccount
  name: mcp-sidecar
  namespace: zamaz-mcp