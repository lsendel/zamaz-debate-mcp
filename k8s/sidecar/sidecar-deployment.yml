apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-sidecar
  namespace: zamaz-mcp
  labels:
    app: mcp-sidecar
    version: v1
    component: sidecar
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mcp-sidecar
      version: v1
  template:
    metadata:
      labels:
        app: mcp-sidecar
        version: v1
        component: sidecar
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: mcp-sidecar
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: sidecar
        image: zamaz/mcp-sidecar:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: MCP_SIDECAR_PORT
          value: "8080"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: JWT_ISSUER
          value: "zamaz-mcp-sidecar"
        - name: JWT_EXPIRATION
          value: "86400"
        - name: JWT_REFRESH_EXPIRATION
          value: "604800"
        - name: ORGANIZATION_SERVICE_URL
          value: "http://mcp-organization-service:5005"
        - name: LLM_SERVICE_URL
          value: "http://mcp-llm-service:5002"
        - name: CONTROLLER_SERVICE_URL
          value: "http://mcp-controller-service:5013"
        - name: RAG_SERVICE_URL
          value: "http://mcp-rag-service:5004"
        - name: CORS_ALLOWED_ORIGINS
          value: "http://localhost:3000,http://localhost:3001,https://app.zamaz.com"
        - name: LOG_LEVEL
          value: "INFO"
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/heapdump.hprof"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-sidecar-service
  namespace: zamaz-mcp
  labels:
    app: mcp-sidecar
    service: sidecar
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  type: LoadBalancer
  selector:
    app: mcp-sidecar
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-sidecar
  namespace: zamaz-mcp
  labels:
    app: mcp-sidecar
    
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mcp-sidecar-role
rules:
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mcp-sidecar-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mcp-sidecar-role
subjects:
- kind: ServiceAccount
  name: mcp-sidecar
  namespace: zamaz-mcp

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mcp-sidecar-pdb
  namespace: zamaz-mcp
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mcp-sidecar

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-sidecar-hpa
  namespace: zamaz-mcp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-sidecar
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60