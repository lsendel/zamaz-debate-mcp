apiVersion: v1
kind: ConfigMap
metadata:
  name: agentic-flows-config
  namespace: agentic-flows
  labels:
    app.kubernetes.io/name: agentic-flows
    app.kubernetes.io/component: configuration
data:
  application.yaml: |
    server:
      port: 8080
      servlet:
        context-path: /api/v1
    
    spring:
      application:
        name: agentic-flows-service
      
      datasource:
        url: jdbc:postgresql://postgres-service:5432/debate_db
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}
        hikari:
          maximum-pool-size: 20
          minimum-idle: 5
          connection-timeout: 30000
          idle-timeout: 600000
          max-lifetime: 1800000
      
      jpa:
        hibernate:
          ddl-auto: validate
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            format_sql: true
            jdbc:
              batch_size: 25
              batch_versioned_data: true
            order_inserts: true
            order_updates: true
      
      redis:
        host: redis-service
        port: 6379
        timeout: 2000ms
        lettuce:
          pool:
            max-active: 10
            max-idle: 8
            min-idle: 2
      
      rabbitmq:
        host: rabbitmq-service
        port: 5672
        username: ${RABBITMQ_USERNAME}
        password: ${RABBITMQ_PASSWORD}
        virtual-host: /
    
    agentic-flows:
      cache:
        enabled: true
        ttl: 900 # 15 minutes
      
      execution:
        thread-pool-size: 20
        queue-capacity: 500
        timeout: 60000 # 1 minute default
      
      rate-limiting:
        enabled: true
        default-limit: 100
        window-size: 3600 # 1 hour
      
      security:
        jwt:
          secret: ${JWT_SECRET}
          expiration: 3600000 # 1 hour
      
      monitoring:
        metrics-enabled: true
        tracing-enabled: true
        
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      metrics:
        export:
          prometheus:
            enabled: true
      tracing:
        sampling:
          probability: 0.1
          
    logging:
      level:
        com.zamaz.mcp.controller: DEBUG
        org.springframework.web: INFO
        org.hibernate.SQL: DEBUG
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"