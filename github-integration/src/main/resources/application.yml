spring:
  application:
    name: github-integration
  
  # Database configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/github_integration}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000
      connection-timeout: 30000
      max-lifetime: 1800000
  
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Flyway configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  # Redis configuration
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6380}
    password: ${SPRING_REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  
  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false

# Server configuration
server:
  port: 8080
  shutdown: graceful
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  tomcat:
    max-threads: 200
    min-spare-threads: 20

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
      group:
        readiness:
          include: db,redis
        liveness:
          include: ping
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0
  info:
    git:
      mode: full

# GitHub API configuration
github:
  app:
    id: ${GITHUB_APP_ID:}
    private-key: ${GITHUB_APP_PRIVATE_KEY:}
  webhook:
    secret: ${GITHUB_WEBHOOK_SECRET:}
    path: /webhooks/github
  client:
    id: ${GITHUB_CLIENT_ID:}
    secret: ${GITHUB_CLIENT_SECRET:}
  api:
    base-url: https://api.github.com
    timeout: 30000
    rate-limit-wait: true

# Kiro API configuration
kiro:
  api:
    url: ${KIRO_API_URL:http://localhost:5013}
    key: ${KIRO_API_KEY:}
    timeout: 30000
  review:
    max-files: 50
    max-file-size: 1048576  # 1MB
    priority-labels: ["bug", "security", "critical"]

# Security configuration
security:
  require-ssl: ${SECURITY_REQUIRE_SSL:false}
  jwt:
    secret: ${JWT_SECRET:default-secret-change-in-production}
    expiration: ${JWT_EXPIRATION:86400}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type
    allow-credentials: true

# Logging configuration
logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    com.zamaz: ${LOGGING_LEVEL_COM_ZAMAZ:DEBUG}
    org.springframework.security: INFO
    org.hibernate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/github-integration.log

# Application-specific configuration
app:
  data-retention:
    days: 90
  security:
    data-boundary: ${DATA_BOUNDARY:default}
  feature-flags:
    auto-apply-fixes: ${AUTO_APPLY_FIXES:false}
    prioritize-pr-instructions: ${PRIORITIZE_PR_INSTRUCTIONS:true}
    learn-from-feedback: ${LEARN_FROM_FEEDBACK:true}