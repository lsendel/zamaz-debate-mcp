apiVersion: apps/v1
kind: Deployment
metadata:
  name: github-integration
  namespace: github-integration
  labels:
    app: github-integration
spec:
  replicas: 2
  selector:
    matchLabels:
      app: github-integration
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: github-integration
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      containers:
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
        securityContext:
          readOnlyRootFilesystem: true
      - name: github-integration
        image: ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: postgres-password
        - name: SPRING_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: redis-password
        - name: GITHUB_APP_ID
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: github-app-id
        - name: GITHUB_APP_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: github-app-private-key
        - name: GITHUB_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: github-webhook-secret
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: github-client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: github-client-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: jwt-secret
        - name: KIRO_API_KEY
          valueFrom:
            secretKeyRef:
              name: github-integration-secrets
              key: kiro-api-key
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config-volume
        configMap:
          name: github-integration-config
      - name: logs-volume
        persistentVolumeClaim:
          claimName: github-integration-logs-pvc
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001