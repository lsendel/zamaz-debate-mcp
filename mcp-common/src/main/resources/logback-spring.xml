<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    
    <!-- Include Spring Boot's base logback configuration -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    
    <!-- Properties for configuration -->
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <springProperty scope="context" name="springProfile" source="spring.profiles.active" defaultValue="default"/>
    <springProperty scope="context" name="logLevel" source="logging.level.root" defaultValue="INFO"/>
    
    <!-- Console appender for development -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</pattern>
                </timestamp>
                <version/>
                <logLevel/>
                <message/>
                <mdc/>
                <arguments/>
                <stackTrace/>
                <jsonMessage/>
                <context/>
                <logstashMarkers/>
            </providers>
        </encoder>
    </appender>
    
    <!-- File appender for production -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/${springAppName:-mcp-service}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/${springAppName:-mcp-service}-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</pattern>
                </timestamp>
                <version/>
                <logLevel/>
                <message/>
                <mdc/>
                <arguments/>
                <stackTrace/>
                <jsonMessage/>
                <context/>
                <logstashMarkers/>
            </providers>
        </encoder>
    </appender>
    
    <!-- Async appender for better performance -->
    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="CONSOLE"/>
        <queueSize>512</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <maxFlushTime>5000</maxFlushTime>
        <includeCallerData>true</includeCallerData>
    </appender>
    
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE"/>
        <queueSize>512</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <maxFlushTime>5000</maxFlushTime>
        <includeCallerData>true</includeCallerData>
    </appender>
    
    <!-- Security audit log appender -->
    <appender name="AUDIT_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/security-audit.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/security-audit-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>90</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</pattern>
                </timestamp>
                <version/>
                <logLevel/>
                <message/>
                <mdc/>
                <arguments/>
                <stackTrace/>
                <jsonMessage/>
                <context/>
                <logstashMarkers/>
            </providers>
        </encoder>
    </appender>
    
    <!-- Performance log appender -->
    <appender name="PERFORMANCE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/performance.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/performance-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</pattern>
                </timestamp>
                <version/>
                <logLevel/>
                <message/>
                <jsonMessage/>
                <context/>
                <logstashMarkers/>
                <mdc/>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>
    
    <!-- Error log appender -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/error-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</pattern>
                </timestamp>
                <version/>
                <logLevel/>
                <message/>
                <jsonMessage/>
                <context/>
                <logstashMarkers/>
                <mdc/>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>
    
    <!-- Specific loggers for different components -->
    
    <!-- Security audit logger -->
    <logger name="com.zamaz.mcp.security.audit" level="INFO" additivity="false">
        <appender-ref ref="AUDIT_FILE"/>
        <appender-ref ref="ASYNC_CONSOLE"/>
    </logger>
    
    <!-- Performance logger -->
    <logger name="com.zamaz.mcp.common.observability.PerformanceLogger" level="INFO" additivity="false">
        <appender-ref ref="PERFORMANCE_FILE"/>
        <appender-ref ref="ASYNC_CONSOLE"/>
    </logger>
    
    <!-- Structured logger -->
    <logger name="com.zamaz.mcp.common.logging.StructuredLogger" level="INFO" additivity="false">
        <appender-ref ref="ASYNC_FILE"/>
        <appender-ref ref="ASYNC_CONSOLE"/>
    </logger>
    
    <!-- Diagnostics logger -->
    <logger name="com.zamaz.mcp.common.diagnostics" level="INFO" additivity="false">
        <appender-ref ref="ASYNC_FILE"/>
        <appender-ref ref="ASYNC_CONSOLE"/>
    </logger>
    
    <!-- Spring framework loggers -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.springframework.security" level="DEBUG"/>
    <logger name="org.springframework.web" level="INFO"/>
    <logger name="org.springframework.boot" level="INFO"/>
    
    <!-- Database loggers -->
    <logger name="org.hibernate" level="WARN"/>
    <logger name="org.hibernate.SQL" level="INFO"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    <logger name="com.zaxxer.hikari" level="INFO"/>
    
    <!-- OpenTelemetry loggers -->
    <logger name="io.opentelemetry" level="INFO"/>
    <logger name="io.opentelemetry.instrumentation" level="INFO"/>
    
    <!-- HTTP client loggers -->
    <logger name="org.apache.http" level="INFO"/>
    <logger name="org.apache.http.wire" level="WARN"/>
    
    <!-- Cache loggers -->
    <logger name="org.springframework.cache" level="INFO"/>
    <logger name="net.sf.ehcache" level="INFO"/>
    
    <!-- Profile-specific configurations -->
    <springProfile name="development,dev">
        <logger name="com.zamaz.mcp" level="DEBUG"/>
        <logger name="org.springframework.web" level="DEBUG"/>
        <logger name="org.springframework.security" level="DEBUG"/>
        <logger name="org.hibernate.SQL" level="DEBUG"/>
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
        
        <root level="INFO">
            <appender-ref ref="ASYNC_CONSOLE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
    
    <springProfile name="staging,test">
        <logger name="com.zamaz.mcp" level="INFO"/>
        <logger name="org.springframework.web" level="INFO"/>
        <logger name="org.springframework.security" level="INFO"/>
        <logger name="org.hibernate.SQL" level="WARN"/>
        
        <root level="INFO">
            <appender-ref ref="ASYNC_CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
    
    <springProfile name="production,prod">
        <logger name="com.zamaz.mcp" level="INFO"/>
        <logger name="org.springframework.web" level="WARN"/>
        <logger name="org.springframework.security" level="WARN"/>
        <logger name="org.hibernate.SQL" level="WARN"/>
        <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="WARN"/>
        
        <root level="WARN">
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
    
    <!-- Default configuration -->
    <springProfile name="!development,!dev,!staging,!test,!production,!prod">
        <logger name="com.zamaz.mcp" level="INFO"/>
        
        <root level="INFO">
            <appender-ref ref="ASYNC_CONSOLE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
    
    <!-- Shutdown hook to ensure logs are flushed -->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>
    
</configuration>