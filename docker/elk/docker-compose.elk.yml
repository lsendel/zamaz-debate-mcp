version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: mcp-elasticsearch
    environment:
      - discovery.type=single-node
      - node.name=mcp-elasticsearch
      - cluster.name=mcp-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - indices.query.bool.max_clause_count=10000
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/config/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: mcp-logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
      - PIPELINE_WORKERS=4
      - PIPELINE_BATCH_SIZE=1000
      - PIPELINE_BATCH_DELAY=50
      - QUEUE_TYPE=persisted
      - QUEUE_MAX_BYTES=2gb
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logstash/patterns:/usr/share/logstash/patterns:ro
      - logstash-data:/usr/share/logstash/data
    ports:
      - "5044:5044"  # Beats input
      - "5000:5000"  # TCP input
      - "5001:5001"  # UDP input
      - "9600:9600"  # Logstash monitoring
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: mcp-kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=mcp-kibana
      - SERVER_HOST=0.0.0.0
      - LOGGING_LEVEL=info
      - XPACK_SECURITY_ENABLED=false
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=a7a6311933d3503b89bc2dbc36572c33a6c10925682e591bffcab6911c06786d
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - kibana-data:/usr/share/kibana/data
    ports:
      - "5601:5601"
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: mcp-filebeat
    depends_on:
      logstash:
        condition: service_healthy
    user: root
    environment:
      - ELASTIC_CONTAINER=true
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat-data:/usr/share/filebeat/data
      - ../logs:/var/log/mcp:ro
    command: filebeat -e -strict.perms=false
    networks:
      - elk-network

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.11.0
    container_name: mcp-metricbeat
    depends_on:
      logstash:
        condition: service_healthy
    user: root
    environment:
      - ELASTIC_CONTAINER=true
    volumes:
      - ./metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - metricbeat-data:/usr/share/metricbeat/data
    command: metricbeat -e -strict.perms=false
    networks:
      - elk-network

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.11.0
    container_name: mcp-apm-server
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
      - apm-server.host=0.0.0.0:8200
      - apm-server.secret_token=mcp-secret-token
      - setup.kibana.host=kibana:5601
      - setup.template.enabled=true
      - logging.level=info
    volumes:
      - ./apm-server/config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    ports:
      - "8200:8200"
    networks:
      - elk-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    container_name: mcp-elasticsearch-exporter
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ES_URI=http://elasticsearch:9200
      - ES_ALL=true
      - ES_INDICES=true
      - ES_SHARDS=true
      - ES_SNAPSHOTS=true
      - ES_CLUSTER_SETTINGS=true
    ports:
      - "9114:9114"
    networks:
      - elk-network

volumes:
  elasticsearch-data:
    driver: local
  logstash-data:
    driver: local
  kibana-data:
    driver: local
  filebeat-data:
    driver: local
  metricbeat-data:
    driver: local

networks:
  elk-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16