# MCP Controller Service Configuration
spring:
  application:
    name: mcp-controller
  
  # Database configuration for controller service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:mcp_controller}
    username: ${DB_USERNAME:mcp_user}
    password: ${DB_PASSWORD:mcp_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: ${DB_MAX_POOL_SIZE:15}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: false

  # RabbitMQ configuration for event-driven communication
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}

# Server configuration
server:
  port: ${SERVER_PORT:5013}
  servlet:
    context-path: /api/v1/controller

# Controller service specific configuration
controller:
  # Debate configuration
  debate:
    max-participants: ${MAX_DEBATE_PARTICIPANTS:10}
    max-rounds: ${MAX_DEBATE_ROUNDS:20}
    default-round-duration: ${DEFAULT_ROUND_DURATION:300}
    auto-close-after-hours: ${AUTO_CLOSE_AFTER_HOURS:24}
  
  # Workflow configuration
  workflow:
    enabled: ${WORKFLOW_ENABLED:true}
    max-concurrent-debates: ${MAX_CONCURRENT_DEBATES:100}
    task-executor-pool-size: ${TASK_EXECUTOR_POOL_SIZE:10}
  
  # Event configuration
  events:
    publish-enabled: ${EVENT_PUBLISH_ENABLED:true}
    retention-days: ${EVENT_RETENTION_DAYS:30}
  
  # Integration endpoints
  integrations:
    llm-service:
      url: ${LLM_SERVICE_URL:http://localhost:5002}
      timeout: ${LLM_SERVICE_TIMEOUT:30000}
    rag-service:
      url: ${RAG_SERVICE_URL:http://localhost:5004}
      timeout: ${RAG_SERVICE_TIMEOUT:30000}
    template-service:
      url: ${TEMPLATE_SERVICE_URL:http://localhost:5006}
      timeout: ${TEMPLATE_SERVICE_TIMEOUT:10000}
    context-service:
      url: ${CONTEXT_SERVICE_URL:http://localhost:5001}
      timeout: ${CONTEXT_SERVICE_TIMEOUT:10000}

# WebSocket configuration
websocket:
  enabled: ${WEBSOCKET_ENABLED:true}
  endpoint: /ws
  allowed-origins: ${WEBSOCKET_ALLOWED_ORIGINS:*}
  message-size-limit: ${WEBSOCKET_MESSAGE_SIZE_LIMIT:65536}

# Circuit breaker configuration for service calls
resilience4j:
  circuitbreaker:
    instances:
      llm-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
      rag-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
      template-service:
        failure-rate-threshold: 70
        wait-duration-in-open-state: 20s

# API documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: ${SWAGGER_ENABLED:true}

# Monitoring
management:
  endpoints:
    web:
      base-path: /actuator
  metrics:
    tags:
      service: controller