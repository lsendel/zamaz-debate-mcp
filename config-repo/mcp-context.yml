# MCP Context Service Configuration
spring:
  application:
    name: mcp-context
  
  # Database configuration for context service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:mcp_context}
    username: ${DB_USERNAME:mcp_user}
    password: ${DB_PASSWORD:mcp_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: false

  # Redis configuration for context caching
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: ${REDIS_TIMEOUT:2000}

# Server configuration
server:
  port: ${SERVER_PORT:5001}
  servlet:
    context-path: /api/v1/context

# Context service specific configuration
context:
  # Context management
  management:
    max-context-size: ${MAX_CONTEXT_SIZE:10485760}
    max-contexts-per-user: ${MAX_CONTEXTS_PER_USER:100}
    context-ttl: ${CONTEXT_TTL:86400}
    auto-cleanup-enabled: ${AUTO_CLEANUP_ENABLED:true}
  
  # Context types
  types:
    - user-preferences
    - debate-history
    - organization-settings
    - conversation-state
    - document-references
  
  # Storage configuration
  storage:
    type: ${CONTEXT_STORAGE_TYPE:hybrid}
    persistent:
      enabled: ${PERSISTENT_STORAGE_ENABLED:true}
      compression: ${STORAGE_COMPRESSION_ENABLED:true}
    cache:
      enabled: ${CACHE_ENABLED:true}
      ttl: ${CACHE_TTL:3600}
      max-size: ${CACHE_MAX_SIZE:1000}
  
  # Context enrichment
  enrichment:
    enabled: ${ENRICHMENT_ENABLED:true}
    providers:
      - user-profile
      - organization-data
      - historical-debates
    max-enrichment-time: ${MAX_ENRICHMENT_TIME:5000}
  
  # Privacy and security
  privacy:
    encryption-enabled: ${CONTEXT_ENCRYPTION_ENABLED:true}
    pii-detection: ${PII_DETECTION_ENABLED:true}
    anonymization: ${ANONYMIZATION_ENABLED:false}

# Integration endpoints
integrations:
  organization-service:
    url: ${ORG_SERVICE_URL:http://localhost:5005}
    timeout: ${ORG_SERVICE_TIMEOUT:5000}
  rag-service:
    url: ${RAG_SERVICE_URL:http://localhost:5004}
    timeout: ${RAG_SERVICE_TIMEOUT:10000}

# API documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: ${SWAGGER_ENABLED:true}

# Monitoring
management:
  endpoints:
    web:
      base-path: /actuator
  metrics:
    tags:
      service: context