[pytest]
# pytest configuration for Kiro GitHub integration tests

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test component interactions
    e2e: End-to-end tests that simulate real scenarios
    performance: Performance tests
    load: Load testing scenarios
    stress: Stress testing to find limits
    slow: Tests that take a long time to run
    security: Security-focused tests
    requires_redis: Tests that require Redis
    requires_github: Tests that require GitHub API access

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --capture=no

# Coverage options
# Run with: pytest --cov=scripts --cov-report=html
testpaths = .
python_paths = ../scripts

# Timeout for tests (in seconds)
timeout = 300

# Async test configuration
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning