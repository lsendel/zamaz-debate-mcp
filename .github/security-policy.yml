# Security Policy for CI/CD Pipeline
# This file defines security standards and requirements for the CI/CD pipeline

# Vulnerability Management
vulnerability_management:
  # Severity thresholds for different environments
  severity_thresholds:
    development: "CRITICAL,HIGH,MEDIUM"
    staging: "CRITICAL,HIGH"
    production: "CRITICAL"
  
  # Automatic failure thresholds
  fail_thresholds:
    development: "CRITICAL"
    staging: "CRITICAL"
    production: "CRITICAL,HIGH"
  
  # Vulnerability scanning tools
  scanning_tools:
    - name: "OWASP Dependency Check"
      type: "dependency"
      enabled: true
      threshold: 7.0  # CVSS score threshold
    
    - name: "Trivy"
      type: "container"
      enabled: true
      threshold: "CRITICAL"
    
    - name: "Semgrep"
      type: "sast"
      enabled: true
      rules:
        - "p/security-audit"
        - "p/owasp-top-ten"
        - "p/java"
        - "p/typescript"
    
    - name: "ZAP"
      type: "dast"
      enabled: true
      threshold: "HIGH"

# Secret Detection
secret_detection:
  enabled: true
  
  tools:
    - name: "TruffleHog"
      enabled: true
    
    - name: "GitLeaks"
      enabled: true
  
  # Automatic revocation of detected secrets
  auto_revocation: false
  
  # Notification settings for detected secrets
  notifications:
    slack: true
    email: true
  
  # Exclusions (use with caution)
  exclusions:
    - "**/*.md"
    - "**/test/resources/**"

# Container Security
container_security:
  # Base image allowlist
  allowed_base_images:
    - "eclipse-temurin:21-jre-alpine"
    - "eclipse-temurin:21-jdk-alpine"
    - "maven:3.9-eclipse-temurin-21-alpine"
    - "node:18-alpine"
  
  # Required security features
  required_features:
    non_root_user: true
    read_only_filesystem: false
    drop_capabilities: true
    no_privileged: true
  
  # Image signing requirements
  signing:
    required: true
    tool: "cosign"
  
  # Container scanning configuration
  scanning:
    pre_registry: true
    post_registry: true
    periodic: true
    periodic_schedule: "0 2 * * *"  # Daily at 2 AM

# Infrastructure as Code Security
iac_security:
  # IaC scanning tools
  tools:
    - name: "Checkov"
      enabled: true
      frameworks:
        - "dockerfile"
        - "kubernetes"
        - "github_actions"
        - "secrets"
    
    - name: "TFSec"
      enabled: true
    
    - name: "Hadolint"
      enabled: true
    
    - name: "Kubesec"
      enabled: true
  
  # Failure thresholds
  fail_thresholds:
    development: "CRITICAL"
    staging: "CRITICAL,HIGH"
    production: "CRITICAL,HIGH"

# Compliance Requirements
compliance:
  standards:
    - name: "OWASP Top 10"
      enabled: true
    
    - name: "CIS Docker Benchmark"
      enabled: true
    
    - name: "NIST 800-53"
      enabled: false
  
  # Audit logging requirements
  audit_logging:
    enabled: true
    retention_period: 90  # days
  
  # Compliance reporting
  reporting:
    frequency: "weekly"
    format: "markdown"
    distribution:
      - "security-team@example.com"

# Security Testing
security_testing:
  # SAST configuration
  sast:
    enabled: true
    frequency: "on_commit"
    tools:
      - "Semgrep"
      - "SonarQube"
      - "SpotBugs"
  
  # DAST configuration
  dast:
    enabled: true
    frequency: "weekly"
    target_urls:
      - "https://staging.example.com"
    tools:
      - "OWASP ZAP"
  
  # SCA configuration
  sca:
    enabled: true
    frequency: "daily"
    tools:
      - "OWASP Dependency Check"
      - "NPM Audit"
  
  # Container security configuration
  container:
    enabled: true
    frequency: "on_build"
    tools:
      - "Trivy"
      - "Docker Scout"

# Incident Response
incident_response:
  # Automatic issue creation
  create_issues: true
  
  # Notification channels
  notifications:
    slack_channel: "#security-alerts"
    email_recipients:
      - "security@example.com"
  
  # Severity levels for notifications
  notification_severity: "CRITICAL,HIGH"
  
  # Incident response procedures
  procedures:
    - name: "Critical Vulnerability"
      steps:
        - "Notify security team immediately"
        - "Create incident ticket"
        - "Block deployment pipeline"
        - "Assess impact and remediation options"
        - "Apply fix and verify"
    
    - name: "Secret Exposure"
      steps:
        - "Notify security team immediately"
        - "Revoke exposed secrets"
        - "Rotate all potentially affected credentials"
        - "Investigate exposure scope"
        - "Implement preventive measures"

# Security Metrics
security_metrics:
  # Metrics to track
  tracked_metrics:
    - name: "Mean Time to Remediate"
      description: "Average time to fix security issues"
      target: "< 7 days"
    
    - name: "Vulnerability Density"
      description: "Number of vulnerabilities per 1000 lines of code"
      target: "< 0.5"
    
    - name: "Security Debt Ratio"
      description: "Percentage of security issues vs total issues"
      target: "< 10%"
  
  # Reporting frequency
  reporting_frequency: "monthly"
  
  # Visualization
  visualization:
    tool: "Grafana"
    dashboard: "Security Metrics"