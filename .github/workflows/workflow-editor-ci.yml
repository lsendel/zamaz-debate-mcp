name: Workflow Editor CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'workflow-editor/**'
      - '.github/workflows/workflow-editor-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'workflow-editor/**'


permissions:
  contents: read
  packages: write
env:
  MAVEN_BATCH_MODE: '--batch-mode --no-transfer-progress --show-version'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/workflow-editor

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Run tests
      run: |
        cd workflow-editor
        mvn clean test ${{ env.MAVEN_BATCH_MODE }}
    
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Backend Test Results
        path: workflow-editor/**/target/surefire-reports/*.xml
        reporter: java-junit

  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: workflow-editor/client/workflow-editor/package-lock.json
    
    - name: Install dependencies
      run: |
        cd workflow-editor/client/workflow-editor
        npm ci --legacy-peer-deps
    
    - name: Run tests
      run: |
        cd workflow-editor/client/workflow-editor
        npm test -- --coverage --watchAll=false
    
    - name: Run linter
      run: |
        cd workflow-editor/client/workflow-editor
        npm run lint || true

  build-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Build application
      run: |
        cd workflow-editor
        mvn clean package -DskipTests ${{ env.MAVEN_BATCH_MODE }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: workflow-editor
        file: workflow-editor/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: workflow-editor/client/workflow-editor/package-lock.json
    
    - name: Install dependencies
      run: |
        cd workflow-editor/client/workflow-editor
        npm ci --legacy-peer-deps
    
    - name: Build application
      run: |
        cd workflow-editor/client/workflow-editor
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: workflow-editor/client/workflow-editor/build

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Configure kubectl
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
    
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f workflow-editor/k8s/namespace.yaml
        kubectl apply -f workflow-editor/k8s/configmap.yaml
        kubectl apply -f workflow-editor/k8s/workflow-service-deployment.yaml
        kubectl apply -f workflow-editor/k8s/hpa.yaml
        kubectl set image deployment/workflow-service workflow-service=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -n workflow-editor