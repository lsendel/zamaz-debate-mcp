name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans daily at 3 AM UTC
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  issues: write
  security-events: write
  pull-requests: read

env:
  MAVEN_BATCH_MODE: '--batch-mode --no-transfer-progress --show-version'
  NODE_VERSION: "18"
  JAVA_VERSION: "21"

jobs:
  # Validation job to catch startup issues
  validate-workflow:
    name: ✅ Validate Workflow
    runs-on: ubuntu-latest
    outputs:
      workflow-valid: ${{ steps.validate.outputs.valid }}
    steps:
      - name: Validate workflow can start
        id: validate
        run: |
          echo "Workflow validation started"
          echo "valid=true" >> $GITHUB_OUTPUT
          echo "✅ Workflow validation passed"
      
      - name: Check GitHub token permissions
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo "Checking GitHub token permissions..."
          # Basic validation that token exists
          if [ -z "$GITHUB_TOKEN" ]; then
            echo "❌ GitHub token is not available"
            exit 1
          fi
          echo "✅ GitHub token is available"

  # Debug job to ensure workflow runs
  debug-info:
    name: 🔍 Debug Workflow
    runs-on: ubuntu-latest
    needs: validate-workflow
    steps:
      - name: Show context
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Workflow: ${{ github.workflow }}"

  semgrep:
    name: 🔍 Semgrep Code Security
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: validate-workflow

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Semgrep token
        id: check-token
        run: |
          if [ -n "${{ secrets.SEMGREP_APP_TOKEN }}" ]; then
            echo "has-token=true" >> $GITHUB_OUTPUT
          else
            echo "has-token=false" >> $GITHUB_OUTPUT
            echo "⚠️ SEMGREP_APP_TOKEN not configured, skipping Semgrep scan"
          fi

      - name: Run Semgrep security scan
        if: steps.check-token.outputs.has-token == 'true'
        uses: semgrep/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/java
            p/typescript
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        continue-on-error: true
      
      - name: Skip Semgrep scan
        if: steps.check-token.outputs.has-token == 'false'
        run: echo "Semgrep scan skipped - SEMGREP_APP_TOKEN not configured"

  java-security:
    name: ☕ Java Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: validate-workflow

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Run SpotBugs security checks
        run: |
          mvn com.github.spotbugs:spotbugs-maven-plugin:spotbugs ${{ env.MAVEN_BATCH_MODE }} \
            -Dspotbugs.effort=Max \
            -Dspotbugs.threshold=Low \
            -Dspotbugs.xmlOutput=true \
            -Dspotbugs.includeFilterFile=spotbugs-security-include.xml
        continue-on-error: true

      - name: Upload SpotBugs results
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs-results
          path: '**/target/spotbugsXml.xml'

  frontend-security:
    name: 🌐 Frontend Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: validate-workflow

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          # cache: 'npm' # Disabled - cache issues
          # cache-dependency-path: debate-ui/package-lock.json

      - name: Install dependencies
        working-directory: ./debate-ui
        run: npm ci
        continue-on-error: true

      - name: Run npm audit
        working-directory: ./debate-ui
        run: |
          npm audit --production
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        with:
          args: --severity-threshold=high --file=debate-ui/package.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  secrets-scan:
    name: 🔐 Secrets Detection
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: validate-workflow

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog secrets scan
        uses: trufflesecurity/trufflehog@v3.72.0
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha || 'main' }}
          head: ${{ github.event.pull_request.head.sha || 'HEAD' }}
          extra_args: --config .trufflehog.yaml --only-verified
        continue-on-error: true

  # CodeQL Analysis from security-scan.yml
  codeql-analysis:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: validate-workflow
    strategy:
      fail-fast: false
      matrix:
        language: ['java', 'javascript']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality
          
      - name: Build code for analysis
        if: matrix.language == 'java'
        run: |
          mvn clean compile -DskipTests ${{ env.MAVEN_BATCH_MODE }}
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
        continue-on-error: true

  # OWASP Dependency Check from security-updated.yml
  owasp-dependency-check:
    name: 🛡️ OWASP Dependency Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: validate-workflow
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
          
      - name: Run OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check ${{ env.MAVEN_BATCH_MODE }} \
            -DfailBuildOnCVSS=7 \
            -DassemblyAnalyzerEnabled=false \
            -DnodeAnalyzerEnabled=false
        continue-on-error: true
        
      - name: Upload OWASP results
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-results
          path: '**/target/dependency-check-report.html'

  security-summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [validate-workflow, semgrep, java-security, frontend-security, secrets-scan, codeql-analysis, owasp-dependency-check]
    if: always()

    steps:
      - name: Security scan summary
        run: |
          echo "## 🛡️ Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Semgrep | ${{ needs.semgrep.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Java Security (SpotBugs) | ${{ needs.java-security.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.codeql-analysis.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| OWASP Dependency Check | ${{ needs.owasp-dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend Security | ${{ needs.frontend-security.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secrets Detection | ${{ needs.secrets-scan.result }} |" >> $GITHUB_STEP_SUMMARY

  # Automated Workflow Failure Handler
  handle-security-failure:
    name: Handle Security Scan Failure
    if: |
      always() && contains(needs.*.result, 'failure')
    needs: [security-summary]
    uses: ./.github/workflows/workflow-failure-handler.yml
    with:
      workflow-name: "Security Scanning"
      # High severity for security failures
      severity: high
      # Security team assignment
      assignees: "security-team,team-lead"
      # Comprehensive security labels
      labels: "workflow-failure,security,compliance"
      # Use security template
      template: "security"
      # Always notify for security issues
      notify-slack: true
      notify-email: ${{ github.ref == 'refs/heads/main' || needs.secrets-scan.result == 'failure' }}
    secrets:
      SLACK_WEBHOOK: ${{ secrets.SECURITY_SLACK_WEBHOOK || secrets.SLACK_WEBHOOK }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      TEAMS_WEBHOOK: ${{ secrets.TEAMS_WEBHOOK }}
