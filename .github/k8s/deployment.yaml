apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiro-github-integration
  namespace: kiro-system
  labels:
    app: kiro
    component: github-integration
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kiro
      component: github-integration
  template:
    metadata:
      labels:
        app: kiro
        component: github-integration
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: kiro-github-integration
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: webhook-handler
        image: kiro/github-webhook-handler:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: GITHUB_APP_ID
          valueFrom:
            secretKeyRef:
              name: github-app-credentials
              key: app-id
        - name: GITHUB_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: github-app-credentials
              key: private-key
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: github-app-credentials
              key: webhook-secret
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      
      - name: pr-processor
        image: kiro/pr-processor:latest
        imagePullPolicy: Always
        env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-app-credentials
              key: github-token
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: PROCESSING_QUEUE
          value: "pr-processing"
        - name: MAX_WORKERS
          value: "10"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "ps aux | grep -v grep | grep pr_processor"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      
      volumes:
      - name: config
        configMap:
          name: kiro-config
          items:
          - key: rules.yaml
            path: rules.yaml
          - key: repositories.yaml
            path: repositories.yaml
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kiro
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: kiro-webhook-service
  namespace: kiro-system
  labels:
    app: kiro
    component: github-integration
spec:
  type: LoadBalancer
  selector:
    app: kiro
    component: github-integration
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiro-github-integration
  namespace: kiro-system
  labels:
    app: kiro
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kiro-github-integration
  namespace: kiro-system
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kiro-github-integration
  namespace: kiro-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kiro-github-integration
subjects:
- kind: ServiceAccount
  name: kiro-github-integration
  namespace: kiro-system
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kiro-github-integration-hpa
  namespace: kiro-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kiro-github-integration
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kiro-github-integration-pdb
  namespace: kiro-system
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: kiro
      component: github-integration