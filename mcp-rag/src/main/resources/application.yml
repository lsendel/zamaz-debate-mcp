server:
  port: 5004
  servlet:
    context-path: /

spring:
  application:
    name: mcp-rag
  
  datasource:
    url: jdbc:postgresql://postgres:5432/rag_db
    username: postgres
    password: ${DB_PASSWORD:changeme}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  
  data:
    redis:
      host: redis
      port: 6379
  
  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null
    
  task:
    execution:
      pool:
        core-size: 2
        max-size: 10
        queue-capacity: 100
    scheduling:
      pool:
        size: 2

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always

# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha

# MCP Configuration
mcp:
  service:
    name: mcp-rag
    version: 1.0.0
    description: "Retrieval Augmented Generation service for MCP"
  
  vector:
    type: in-memory  # Options: in-memory, qdrant
    dimension: 1536
    
# Qdrant Configuration
qdrant:
  host: qdrant
  port: 6334
  
# OpenAI Configuration
openai:
  api:
    key: ${OPENAI_API_KEY:your-api-key-here}
  embedding:
    model: text-embedding-ada-002
    dimension: 1536
    
# RAG Configuration
rag:
  chunking:
    default-size: 1000
    overlap: 200
    max-size: 2000
  processing:
    batch-size: 10
    max-retries: 3
    
# Logging
logging:
  level:
    com.zamaz.mcp.rag: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"