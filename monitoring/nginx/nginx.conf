user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=monitoring:10m rate=5r/s;

    # Upstream definitions
    upstream github-integration {
        least_conn;
        server github-integration:8080 max_fails=3 fail_timeout=30s;
    }

    upstream grafana {
        least_conn;
        server grafana:3000 max_fails=3 fail_timeout=30s;
    }

    upstream prometheus {
        least_conn;
        server prometheus:9090 max_fails=3 fail_timeout=30s;
    }

    upstream alertmanager {
        least_conn;
        server alertmanager:9093 max_fails=3 fail_timeout=30s;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;

    # Main application
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # GitHub Integration API
        location /api/github-integration/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://github-integration/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Health check
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        }

        # Grafana
        location /grafana/ {
            limit_req zone=monitoring burst=10 nodelay;
            
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Grafana
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Prometheus
        location /prometheus/ {
            limit_req zone=monitoring burst=10 nodelay;
            
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # AlertManager
        location /alertmanager/ {
            limit_req zone=monitoring burst=10 nodelay;
            
            proxy_pass http://alertmanager/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Default location
        location / {
            return 302 /grafana/;
        }
    }

    # Monitoring endpoints (internal)
    server {
        listen 8080;
        server_name localhost;
        
        access_log off;
        
        # Node exporter metrics
        location /metrics/node {
            proxy_pass http://node-exporter:9100/metrics;
            allow 172.20.0.0/16;
            deny all;
        }
        
        # Application metrics
        location /metrics/app {
            proxy_pass http://github-integration:8080/actuator/prometheus;
            allow 172.20.0.0/16;
            deny all;
        }
        
        # Blackbox exporter metrics
        location /metrics/blackbox {
            proxy_pass http://blackbox-exporter:9115/metrics;
            allow 172.20.0.0/16;
            deny all;
        }
        
        # Deny all other access
        location / {
            deny all;
        }
    }
}